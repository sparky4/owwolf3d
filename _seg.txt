src/contigsc.c:byte _seg	*endscalermemory;
src/contigsc.c:	endscalermemory = (void _seg *)(seg+ofs/16);
src/contigsc.c:	t_compshape	_seg *shape;
src/contigsc.c:	t_compshape	_seg *shape;
src/id_ca.c:byte 		_seg	*tinf;
src/id_ca.c:unsigned	_seg	*mapsegs[MAPPLANES];
src/id_ca.c:maptype		_seg	*mapheaderseg[NUMMAPS];
src/id_ca.c:byte		_seg	*audiosegs[NUMSNDCHUNKS];
src/id_ca.c:void		_seg	*grsegs[NUMCHUNKS];
src/id_ca.c:long		_seg *grstarts;	// array of offsets in egagraph, -1 for sparse
src/id_ca.c:long		_seg *audiostarts;	// array of offsets in audio / audiot
src/id_ca.c:	grstarts = (long _seg *)FP_SEG(&EGAhead);
src/id_ca.c:	tinf = (byte _seg *)FP_SEG(&maphead);
src/id_ca.c:		pos = ((mapfiletype	_seg *)tinf)->headeroffsets[i];
src/id_ca.c:	audiostarts = (long _seg *)FP_SEG(&audiohead);
src/id_ca.c:		((mapfiletype _seg *)tinf)->RLEWtag);
src/id_ca.c:		((mapfiletype _seg *)tinf)->RLEWtag);
src/id_ca.c:					source = (byte _seg *)bufferseg+(pos-bufferstart);
src/id_ca.h:extern	byte 		_seg	*tinf;
src/id_ca.h:extern	unsigned	_seg	*mapsegs[MAPPLANES];
src/id_ca.h:extern	maptype		_seg	*mapheaderseg[NUMMAPS];
src/id_ca.h:extern	byte		_seg	*audiosegs[NUMSNDCHUNKS];
src/id_ca.h:extern	void		_seg	*grsegs[NUMCHUNKS];
src/id_ca.h:extern long		_seg *grstarts;	// array of offsets in egagraph, -1 for sparse
src/id_ca.h:extern long		_seg *audiostarts;	// array of offsets in audio / audiot
src/id_in.c:		byte _seg	*DemoBuffer;
src/id_in.h:extern	byte _seg	*DemoBuffer;
src/id_mm.h:typedef void _seg * memptr;
src/id_pm.c:					_seg *PMSegPages;
src/id_pm.c:	void			_seg *buf;
src/id_pm.c:		MM_FreePtr(&(void _seg *)PMSegPages);
src/id_sd.c:	word		*SoundTable;	// Really * _seg *SoundTable, but that don't work
src/id_sd.c:		word			_seg *DigiList;
src/id_vh.c:pictabletype	_seg *pictable;
src/id_vh.c:	byte		far *dest, far *srcline, _seg *temp;
src/id_vh.c:	, fontstruct _seg *font)
src/id_vh.c:	VWL_MeasureString(string,width,height,(fontstruct _seg *)grsegs[STARTFONT+fontnumber]);
src/id_vh.c:	VWL_MeasureString(string,width,height,(fontstruct _seg *)grsegs[STARTFONTM+fontnumber]);
src/id_vh.c:	src = (byte _seg *)grsegs[STARTTILE8];
src/id_vh.c:	src = (byte _seg *)grsegs[STARTTILE16];
src/id_vh.c:		src = (byte _seg *)grsegs[STARTTILE16+i];
src/id_vh.h:extern	pictabletype	_seg *pictable;
src/id_vh.h:extern	pictabletype	_seg *picmtable;
src/id_vh.h:extern	spritetabletype _seg *spritetable;
src/wl_debug.c:	spritetype _seg	*block;
src/wl_debug.c:extern	word	_seg *DigiList;
src/wl_def.h:extern	t_compscale _seg *scaledirectory[MAXSCALEHEIGHT+1];
src/wl_menu.c:	fontstruct _seg *font;
src/wl_scale.c:t_compscale _seg *scaledirectory[MAXSCALEHEIGHT+1];
src/wl_scale.c:t_compscale 	_seg *work;
src/wl_scale.c:	_fmemcpy ((byte _seg *)(*finalspot),(byte _seg *)work,totalsize);
src/wl_scale.c:	t_compshape	_seg *shape;
src/wl_scale.c:	t_compscale _seg *comptable;
src/wl_scale.c:	t_compshape	_seg *shape;
src/wl_scale.c:	t_compscale _seg *comptable;
src/wl_text.c:	text = (char _seg *)grsegs[artnum];
src/wl_text.c:	text = (char _seg *)layout;
src/wl_text.c:	text = (char _seg *)grsegs[artnum];
src/wl_text.c:	text = (char _seg *)layout;
